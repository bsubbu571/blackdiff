results/peloton/mkdocs.yml:6 - - User Guide: user-guide.md
results/peloton/tests/performance/multi_benchmark.py:101 - base_output: user specified output file as basis of generated file set.
results/peloton/tests/integration/aurorabridge_test/test_read.py:121 - assert "testuser" == t.assignedTask.task.owner.user
results/peloton/example/mesos-execute-taskgroup.json:54 - "user": "root",
results/peloton/example/mesos-execute-taskgroup.json:110 - "user": "root",
results/peloton/tools/deploy/app.py:57 - AURORA_USER = "peloton"
results/peloton/tools/deploy/app.py:480 - owner=Identity(user=AURORA_USER),
results/peloton/tools/deploy/app.py:502 - owner=Identity(user=AURORA_USER),
results/peloton/tools/deploy/app.py:883 - owner=Identity(user=AURORA_USER),
results/peloton/tools/deploy/app.py:911 - owner=Identity(user=AURORA_USER),
results/peloton/tools/deploy/aurora/client.py:47 - if os.getenv("AURORA_USERNAME") and os.getenv("AURORA_PASSWORD"):
results/peloton/tools/deploy/aurora/client.py:48 - username = os.getenv("AURORA_USERNAME")
results/peloton/tools/deploy/aurora/client.py:49 - password = os.getenv("AURORA_PASSWORD")
results/peloton/tools/deploy/aurora/api/ttypes.py:265 - def __init__(self, user=None,):
results/peloton/tools/deploy/aurora/api/ttypes.py:266 - self.user = user
results/peloton/tools/deploy/aurora/api/ttypes.py:279 - self.user = iprot.readString().decode('utf-8')
results/peloton/tools/deploy/aurora/api/ttypes.py:292 - if self.user is not None:
results/peloton/tools/deploy/aurora/api/ttypes.py:1086 - - role: User role (Unix service account), for example "mesos"
results/peloton/tools/deploy/aurora/api/ttypes.py:1264 - - token: UUID - facilitating soft lock authorization
results/peloton/tools/deploy/aurora/api/ttypes.py:1265 - - user: Lock creator
results/peloton/tools/deploy/aurora/api/ttypes.py:1272 - 'token',
results/peloton/tools/deploy/aurora/api/ttypes.py:1281 - (2, TType.STRING, 'token', None, None, ), # 2
results/peloton/tools/deploy/aurora/api/ttypes.py:1287 - def __init__(self, key=None, token=None, user=None, timestampMs=None, message=None,):
results/peloton/tools/deploy/aurora/api/ttypes.py:1287 - def __init__(self, key=None, token=None, user=None, timestampMs=None, message=None,):
results/peloton/tools/deploy/aurora/api/ttypes.py:1289 - self.token = token
results/peloton/tools/deploy/aurora/api/ttypes.py:1290 - self.user = user
results/peloton/tools/deploy/aurora/api/ttypes.py:1311 - self.token = iprot.readString().decode('utf-8')
results/peloton/tools/deploy/aurora/api/ttypes.py:1316 - self.user = iprot.readString().decode('utf-8')
results/peloton/tools/deploy/aurora/api/ttypes.py:1343 - if self.token is not None:
results/peloton/tools/deploy/aurora/api/ttypes.py:1344 - oprot.writeFieldBegin('token', TType.STRING, 2)
results/peloton/tools/deploy/aurora/api/ttypes.py:1347 - if self.user is not None:
results/peloton/tools/deploy/aurora/api/ttypes.py:2132 - - name: a parameter to pass to docker. (e.g. volume)
results/peloton/tools/deploy/aurora/api/ttypes.py:2133 - - value: the value to pass to a parameter (e.g. /src/webapp:/opt/webapp)
results/peloton/tools/deploy/aurora/api/ttypes.py:2221 - - parameters: The arbitrary parameters to pass to container
results/peloton/tools/deploy/aurora/api/ttypes.py:5325 - - user: User who performed this event (if user-initiated).
results/peloton/tools/deploy/aurora/api/ttypes.py:5345 - def __init__(self, status=None, timestampMs=None, user=None, message=None,):
results/peloton/tools/deploy/aurora/api/ttypes.py:5348 - self.user = user
results/peloton/tools/deploy/aurora/api/ttypes.py:5372 - self.user = iprot.readString().decode('utf-8')
results/peloton/tools/deploy/aurora/api/ttypes.py:5398 - if self.user is not None:
results/peloton/tools/deploy/aurora/api/ttypes.py:5735 - Summary of the job update including job key, user and current state.
results/peloton/tools/deploy/aurora/api/ttypes.py:5739 - - user: User initiated an update.
results/peloton/tools/deploy/aurora/api/ttypes.py:5761 - def __init__(self, key=None, user=None, state=None, metadata=None,):
results/peloton/tools/deploy/aurora/api/ttypes.py:5763 - self.user = user
results/peloton/tools/deploy/aurora/api/ttypes.py:5784 - self.user = iprot.readString().decode('utf-8')
results/peloton/tools/deploy/aurora/api/ttypes.py:5814 - if self.user is not None:
results/peloton/tools/deploy/aurora/api/ttypes.py:6314 - - user: User who created the update.
results/peloton/tools/deploy/aurora/api/ttypes.py:6342 - def __init__(self, role=None, key=None, jobKey=None, user=None, updateStatuses=None, offset=None, limit=None,):
results/peloton/tools/deploy/aurora/api/ttypes.py:6346 - self.user = user
results/peloton/tools/deploy/aurora/api/ttypes.py:6379 - self.user = iprot.readString().decode('utf-8')
results/peloton/tools/deploy/aurora/api/ttypes.py:6420 - if self.user is not None:
results/peloton/tools/deploy/aurora/api/AuroraAdmin.py:140 - Forcibly rewrites the stored definition of user configurations.  This is intended to be used
results/peloton/tools/deploy/aurora/api/AuroraAdmin.py:632 - Forcibly rewrites the stored definition of user configurations.  This is intended to be used
results/peloton/tools/deploy/aurora/schema/thermos/schema_base.py:47 - user    = String
results/peloton/tools/deploy/aurora/schema/thermos/schema_base.py:110 - user = String
results/peloton/tools/vagrant/packer/peloton.json:8 - "ssh_username": "vagrant",
results/peloton/tools/vagrant/packer/peloton.json:9 - "ssh_password": "vagrant",
results/peloton/tools/vcluster/peloton_helper.py:94 - name="peloton-client", zk_servers=zk_servers, auth=auth_config,
results/peloton/tools/vcluster/main.py:56 - help="auth type of the physical Peloton cluster",
results/peloton/tools/vcluster/main.py:62 - help="auth config file used to talk to the physical Peloton cluster",
