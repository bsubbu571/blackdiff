results/baseweb/src/drawer/types.ts:51 - * false if your modal has an action that the user must take before closing.*/
results/baseweb/src/pin-code/__tests__/pin-code.e2e.ts:114 - await expect(pinCodeValue).toHaveText('password:1 2 3 4 ');
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:11 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:28 - realUser: 'jsmith',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:33 - user: 'jsmith',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:40 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:57 - realUser: 'jsmith',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:62 - user: 'jsmith',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:69 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:86 - realUser: 'jdoe',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:91 - user: 'jdoe',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:98 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:115 - realUser: 'jsmith',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:120 - user: 'jsmith',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:127 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:143 - realUser: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:151 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:168 - realUser: 'ckelly',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:173 - user: 'ckelly',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:180 - user: 'hive',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:197 - realUser: 'awhite',
results/baseweb/src/data-table/__tests__/graphql-array-data.ts:202 - user: 'awhite',
results/baseweb/src/input/types.ts:20 - /** Renders input in 'masked' state if type equals "password" */
results/baseweb/src/input/types.ts:106 - /** A  hint as to the type of data that might be entered by the user while editing the element or its contents. */
results/baseweb/src/input/__tests__/input.e2e.ts:116 - await mount(page, 'input--password');
results/baseweb/src/input/__tests__/input.e2e.ts:123 - test('while focusing input, "enter" does not toggle password masking', async ({ page }) => {
results/baseweb/src/input/__tests__/input.e2e.ts:128 - await expect(input).toHaveAttribute('type', 'password');
results/baseweb/src/input/__tests__/input.e2e.ts:131 - await expect(input).toHaveAttribute('type', 'password');
results/baseweb/src/input/__tests__/input.e2e.ts:138 - // focus password mask toggle
results/baseweb/src/input/__tests__/input.e2e.ts:143 - await expect(input).toHaveAttribute('type', 'password');
results/baseweb/src/test/integration.ts:89 - id: 'bypass',
results/baseweb/src/test/integration.ts:135 - pass: messages.length === 0,
results/baseweb/src/utils/focusVisible.ts:26 - password: true,
results/baseweb/src/utils/focusVisible.ts:65 - * If the most recent user interaction was via the keyboard;
results/baseweb/src/utils/focusVisible.ts:79 - * If at any point a user clicks with a pointing device, ensure that we change
results/baseweb/src/utils/focusVisible.ts:81 - * This avoids the situation where a user presses a key on an already focused
results/baseweb/src/utils/focusVisible.ts:94 - // re-apply the class when the user switches back to the tab.
results/baseweb/src/utils/focusVisible.ts:130 - // no need for validFocusTarget check. the user does that by attaching it to
results/baseweb/src/message-card/utils.ts:153 - it does not pass accessibility contrast tests for either white or black text.`
results/baseweb/src/message-card/utils.ts:163 - `It looks like you're supplying a primitive color token from the "dark" theme color ramp for MessageCard's backgroundColor. Only color tokens from the "light" theme color ramp are supported. MessageCard uses an overlay for dark mode.`
results/baseweb/src/combobox/types.ts:47 - // Called when input value changes or option is selected. If user selects a
results/baseweb/src/card/types.ts:38 - /** Contents to be rendered at the bottom of the Card. Used to organize UI which enables user action. */
results/baseweb/src/themes/types.ts:218 - /** @deprecated this color token is deprecated */
results/baseweb/src/themes/types.ts:220 - /** @deprecated this color token is deprecated */
results/baseweb/src/themes/types.ts:222 - /** @deprecated this color token is deprecated */
results/baseweb/src/themes/types.ts:224 - /** @deprecated this color token is deprecated */
results/baseweb/src/themes/types.ts:226 - /** @deprecated this color token is deprecated */
results/baseweb/src/themes/types.ts:228 - /** @deprecated this color token is deprecated */
results/baseweb/src/themes/types.ts:230 - /** @deprecated this color token is deprecated */
results/baseweb/src/popover/stateful-container.ts:132 - * If user passed a content render prop, we want to give them a
results/baseweb/src/popover/types.ts:72 - /** Pass FocusOptions for focusing (used as `HtmlElement.focus(focusOptions)`) */
results/baseweb/src/popover/types.ts:128 - /** Whether to hide the popover when the user clicks anywhere outside the trigger/popover. */
results/baseweb/src/popover/types.ts:130 - /** Whether to hide the popover when the user presses the escape key. */
results/baseweb/src/slider/types.ts:44 - /** Function to change the numeric value to a user friendly value. Also applied to min/max labels. */
results/baseweb/src/layer/tether.ts:71 - See how to pass the ref to an anchor element in the Popover example
results/baseweb/src/radio/types.ts:45 - // This prop will be deprecated in the next major update. Pass overrides to the 'Radio' component instead.
results/baseweb/src/datepicker/types.ts:212 - /** Determines whether user clicked startDate or endDate input to trigger calendar open */
results/baseweb/src/datepicker/__tests__/utils.test.ts:964 - // doesn't current pass through locale correctly
results/baseweb/src/phone-input/__tests__/phone-input-dropdown.e2e.ts:38 - test('check that a user can select a country from the dropdown \
results/baseweb/src/phone-input/__tests__/phone-input.e2e.ts:52 - test('allows a user to open a dropdown containing country dial codes', async ({ page }) => {
results/baseweb/src/phone-input/__tests__/phone-input.e2e.ts:63 - test('allows a user select a country using the keyboard', async ({ page }) => {
results/baseweb/src/phone-input/__tests__/phone-input.e2e.ts:78 - test('allows a user to select a country from the dropdown, which populates a dial code', async ({
results/baseweb/src/modal/types.ts:41 - * Optionally, can pass focus options instead of `true` to control the focus
results/baseweb/src/modal/types.ts:50 - * false if your modal has an action that the user must take before closing.*/
results/baseweb/.github/workflows/release.yml:17 - id-token: write
results/baseweb/.github/workflows/release.yml:48 - //registry.npmjs.org/:_authToken=$NPM_TOKEN
results/baseweb/.github/workflows/release.yml:51 - NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
results/baseweb/.github/workflows/release.yml:56 - NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
results/baseweb/documentation-site/components/yard/config/tab-motion.ts:40 - description: "Use to pass a ref to the Tab.",
results/baseweb/documentation-site/components/yard/config/input.ts:89 - placeholder: "password",
results/baseweb/documentation-site/components/yard/config/input.ts:122 - "A hint as to the type of data that might be entered by the user while editing the element or its contents.",
results/baseweb/documentation-site/components/yard/config/app-nav-bar.ts:69 - description: "User profile name.",
results/baseweb/documentation-site/components/yard/config/app-nav-bar.ts:75 - description: "User profile description or additional information.",
results/baseweb/documentation-site/components/yard/config/app-nav-bar.ts:81 - description: "User profile image link.",
results/baseweb/documentation-site/components/yard/config/app-nav-bar.ts:89 - label: 'User A',
results/baseweb/documentation-site/components/yard/config/app-nav-bar.ts:93 - label: 'User B',
results/baseweb/documentation-site/components/yard/config/app-nav-bar.ts:97 - description: "List of the user profile navigation items.",
results/baseweb/documentation-site/pages/blog/getting-started-with-base-web/metadata.json:5 - "tagline": "Let's build a password generator!",
results/baseweb/packages/baseui-codemods/flow-typed/npm/jest_v24.x.x.js:126 - pass: boolean,
results/baseweb/packages/eslint-plugin-baseui/src/messages.js:25 - message: `"$style" and "style" are not supported props for the "Block" component. Please use "overrides.Block" to pass styles down to the root element.`,
results/baseweb/packages/baseweb-vscode-extension/ext-src/extension.ts:83 - // This happens when the user closes the panel or when the panel is closed programmatically
