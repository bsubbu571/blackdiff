results/slackin/azuredeploy.json:36 - "slackApiToken" : {
results/slackin/azuredeploy.json:39 - "description": "Slack API token (find it on https://api.slack.com/web)"
results/slackin/azuredeploy.json:100 - "SLACK_API_TOKEN": "[parameters('slackApiToken')]",
results/slackin/app.json:12 - "SLACK_API_TOKEN": {
results/slackin/app.json:13 - "description": "A Slack API token (find it on https://api.slack.com/web)",
results/slackin/test/slack-invite.js:14 - token: 'mytoken'
results/slackin/test/index.js:10 - .query({token: 'mytoken', presence: '1'})
results/slackin/test/index.js:11 - .query({token: 'mytoken'})
results/slackin/test/index.js:18 - .get('/api/channels.list?token=mytoken')
results/slackin/test/index.js:25 - .get('/api/team.info?token=mytoken')
results/slackin/test/index.js:34 - token: 'mytoken',
results/slackin/test/index.js:55 - token: 'mytoken',
results/slackin/lib/slack-invite.js:5 - let data = { email, token };
results/slackin/lib/slack-invite.js:24 - // If the account that owns the token is not admin, Slack will oddly
results/slackin/lib/slack-invite.js:31 - fn(new Error(`Missing admin scope: The token you provided is for an account that is not an admin. You must provide a token from an admin account in order to invite users through the Slack API.`));
results/slackin/lib/slack.js:10 - this.token = token;
results/slackin/lib/slack.js:23 - .query({ token: this.token })
results/slackin/lib/slack.js:32 - .query({ token: this.token })
results/slackin/lib/slack.js:45 - .query({ token: this.token, presence: 1 })
results/slackin/lib/assets/badge.js:45 - // numbers of users, based on a user count
results/slackin/lib/assets/superagent.js:655 - *  We can use the promise-like API, or pass callbacks:
results/slackin/lib/assets/superagent.js:1048 - Request.prototype.auth = function(user, pass){
