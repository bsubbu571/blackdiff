results/causalml/.github/workflows/python-publish.yml:71 - password: ${{ secrets.PYPI_API_TOKEN }}
results/causalml/.github/workflows/python-publish.yml:71 - password: ${{ secrets.PYPI_API_TOKEN }}
results/causalml/causalml/propensity.py:204 - """Generate propensity score if user didn't provide and optionally calibrate.
results/causalml/causalml/inference/meta/base.py:260 - If shapley values have been pre-computed, pass it through the shap_dict parameter.
results/causalml/causalml/inference/meta/base.py:299 - If shapley values have been pre-computed, pass it through the shap_dict parameter.
results/causalml/causalml/inference/iv/drivlearner.py:757 - If shapley values have been pre-computed, pass it through the shap_dict parameter.
results/causalml/causalml/inference/iv/drivlearner.py:796 - If shapley values have been pre-computed, pass it through the shap_dict parameter.
results/causalml/causalml/inference/tree/_tree/_classes.py:236 - # We can't pass multi_output=True because that would allow y to be
results/causalml/causalml/inference/tree/_tree/_classes.py:513 - Allow to bypass several input checking.
results/causalml/causalml/inference/tree/_tree/_classes.py:562 - Allow to bypass several input checking.
results/causalml/causalml/inference/tree/_tree/_classes.py:590 - Allow to bypass several input checking.
results/causalml/causalml/inference/tree/causal/_tree.py:60 - # We can't pass multi_ouput=True because that would allow y to be
results/causalml/causalml/inference/tree/causal/causaltree.py:200 - Allow to bypass several input checking.
results/causalml/causalml/metrics/sensitivity.py:194 - alpha_range (np.array, optional): a parameter to pass the confounding function
results/causalml/causalml/metrics/sensitivity.py:393 - alpha_range (np.array): a parameter to pass the confounding function
results/causalml/causalml/optimize/policylearner.py:116 - p (optional, np.array): user provided propensity score vector between 0 and 1
results/causalml/causalml/optimize/policylearner.py:117 - dhat (optinal, np.array): user provided predicted treatment effect vector
results/causalml/causalml/optimize/utils.py:8 - Calculate the actual cost of targeting a user with the actual treatment
results/causalml/causalml/optimize/utils.py:67 - Calculate the actual value of targeting a user with the actual treatment group
results/causalml/causalml/optimize/utils.py:93 - Array of actual values of havng a user in their actual treatment group.
results/causalml/causalml/optimize/utils.py:110 - # Calculate the actual value of having a user in their actual treatment
